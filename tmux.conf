# Commands in this file will be run when the tmux server is started.

# It's unnecessary and actually error-inducing to place the 
# leading "tmux" word.
# Bash: "$ tmux unbind-key C-b" is equivalent to 
# .tmux.conf: "unbind-key C-b".

# ============= Options ==================
# Options control the appearance and behavior of tmux.
# There are 4 types of options: server, session, window and pane.
# set-option can mostly infer the type based on the option name. 
# But, flags are necessary for option names common to the different option types.
# -s: server (not session!), -w: window, -p: pane. If left unspecified, tmux assumes session.
# -g: global session/window.
# set-option {option-name} {value}

# =========== Key Bindings ===============
# bind-key (alias: bind) [-nR] [-T key-table] {key} {command-name}.
# Bindings in tmux are typically in one of two key-tables: prefix & root. tmux also offers the ability to create custom key tables.
# Keys (i.e. the {key} argument above) must be a single key (or character), for example a or e or ~. The lone exception is the Ctrl key,
# which may be combined with another key, for example C-a, C-e or C-~.

# The prefix table contains keys whose command will be fired when the prefix-key then the listed key are pressed. For example,
# bind-key -T prefix c new-window, then pressing Ctrl-b (assuming the default prefix) + c will create a new-window.
# By default, the command writes to the prefix table, so the above "-T prefix" flag was unnecessary and repetitive.

# The root table contains keys whose command will be fired when just that key is pressed. No need for the prefix-key first!
# For example, bind-key -T root c new-window, then pressing just the c key will create a new window. Ruh-roh: it's now
# problematic to type just the 'c' key in a tmux terminal pane. 
# # -n is an alias for -T root. So, bind-key -n c new-window is equivalent to the earlier example (bind-key -T root c new-window).


# unbind-key (alias: unbind) [-anq] [-T key-table] {key}. 
# Unbind the command bound to key. -q: quiet. -a: remove all key bindings. -n: alias for -T root.
# unbind-key C-b

# set-option -g prefix C-a
# bind-key C-a send-prefix

# Allow for directly scrolling within panes. Also, allows for clicking between panes.
set -g mouse on

# ============= Copy Pasted from Stack Overflow =====
# https://unix.stackexchange.com/questions/318281/how-to-copy-and-paste-with-a-mouse-with-tmux
# macOS only
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M
bind -T copy-mode-vi    C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-vi    C-WheelDownPane send-keys -X halfpage-down
bind -T copy-mode-emacs C-WheelUpPane   send-keys -X halfpage-up
bind -T copy-mode-emacs C-WheelDownPane send-keys -X halfpage-down

# To copy, left click and drag to highlight text in yellow, 
# once you release left click yellow text will disappear and will automatically be available in clibboard
# # Use vim keybindings in copy mode
setw -g mode-keys vi
# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"